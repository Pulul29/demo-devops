# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

stages:
- stage: Build
  pool: default
  jobs:
    - job: Build_Jar
      displayName: 'Generar JAR Aplicaci칩n'
      steps:
      - checkout: self
        fetchDepth: 0
      - task: SonarCloudPrepare@1
        displayName: 'Preparar Configuraci칩n Sonar Cloud'
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'psaluisa'
          scannerMode: 'Other'
          extraProperties: |
            sonar.projectKey=psaluisa_Demo-DevOps
            sonar.projectName=Demo-DevOps
      - task: Maven@3
        displayName: 'Build de Aplicaci칩n (Test y Cobertura)'
        inputs:
          mavenPomFile: 'pom.xml'
          goals: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          codeCoverageToolOption: 'JaCoCo'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          mavenVersionOption: 'Default'
          mavenOptions: '-Xmx3072m'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest'
      - task: SonarCloudPublish@1
        displayName: 'Publicar Resultados An치lisi Sonar Cloud'
        inputs:
          pollingTimeoutSec: '300'
    
    - job: Build_Image
      displayName: 'Generar Imagen APP'
      dependsOn: Build_Jar
      steps:
      - checkout: none
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker Hub'
          repository: 'paulngt2/demo-devops'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          arguments: '--build-arg port=9000'      
      - task: Docker@2
        inputs:
          containerRegistry: 'Docker Hub'
          repository: 'paulngt2/demo-devops'
          command: 'push'
- stage: Deploy
  pool: default
  jobs:
    - job: Deploy_GKE
      displayName: 'Desplegar App en Cluster GKE'
      steps:
      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'GKE'
          namespace: 'demo-devops'
          command: 'apply'
          useConfigurationFile: true
          configuration: './deployment/.'
          secretType: 'generic' 
